<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itstudy.dao.UserDao">

    <!--
       ＤＢのcolumnの名前がUserのプロパティの名前一致する時に、大丈夫ですが、一致しない場合は、
       以下の配置が必要となります、findAllのようなメソッドを実行する時に、一致しないと、パッケージ出来なくなりますので
    -->
    <resultMap id="userMap" type="com.itstudy.domain.User">
        <!--primaryKey-->
        <id property="userId" column="id" ></id>
        <!--primaryKey以外のcolumn-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        select *from user;
    </select>

    <!--
        DBを作るときに、idはauto-incrementなので、だから、idは表示しませんが、もしメソッドを実行する時に、
        idのヴァリューも知りたい場合、新しいデータを保存した後、このｓｑｌ実行すればいいです。
        select last_insert_id();
    -->
    <insert id="saveUser" parameterType="com.itstudy.domain.User">
        <selectKey keyProperty="userId"  keyColumn="id" order="AFTER" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values (#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

    <update id="updateUser" parameterType="com.itstudy.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <!--パラメータは基本形で唯一の時は＃｛何でもいい｝-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>

    <select id="findUserById" parameterType="int" resultType="com.itstudy.domain.User">
        select *from user where id=#{何でもいい}
    </select>

    <!--こう書くと、“%”はないんですので、テストのときにわざとつけないといけないです
        もう一つ書き方ありますが、あまり使わないはずです
        select * from user where username like '%${value}%'　これはテストのときに、％つけなくてもいい
    -->
    <select id="findUserByName" parameterType="string" resultType="com.itstudy.domain.User">
    <!--   select * from user where username like '%${value}%';   -->
        select * from user where username like #{username};
    </select>

    <!--ユーザーの数を調べる-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!--OGNL表达式を理解するために、作るメソッド-->
    <select id="findUserByVo" parameterType="com.itstudy.domain.QueryVo" resultType="com.itstudy.domain.User">
        select * from user where username like #{user.username};
    </select>

</mapper>